<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
http://www.springframework.org/schema/aop  
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<context:component-scan base-package="net.easyunion" />
	<!-- 调用spring的property配置文件管理服务 -->
	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:config.properties</value>
			</list>
		</property>
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

	<bean class="net.easyunion.common.spring.SpringContextUtil" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="select 1 from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters <property name="filters" value="stat,encoding" /> 
			<property name="connectionProperties" value="clientEncoding=GBK;serverEncoding=ISO-8859-1" 
			/> -->
	</bean>

	<!-- 定义JdbcTemplate(线程安全,执行底层sql语句) -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 设置jdbcTemplate创建的statement查询数据时最大的超时时间,默认0 -->
		<property name="queryTimeout" value="0" />
		<!-- 设置底层ResultSet每次从数据库返回的行数,默认0,Oracle默认100 -->
		<property name="fetchSize" value="0" />
		<!-- 设置底层ResultSet从数据库返回的最大行数,默认0 -->
		<property name="maxRows" value="0" />
		<!-- 是否忽略sql警告信息,默认true,false JdbcTemplate将会抛出SQLWarningException -->
		<property name="ignoreWarnings" value="true" />
	</bean>

	<bean id="jdbcDao" class="net.easyunion.common.dao.JdbcDao">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="dataSourceFwsk" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${fwsk.dburl}" />
		<property name="username" value="${fwsk.username}" />
		<property name="password" value="${fwsk.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="select 1 from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>

	<!-- 定义JdbcTemplate(线程安全,执行底层sql语句) -->
	<bean id="jdbcTemplateFwsk" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSourceFwsk" />
		<!-- 设置jdbcTemplate创建的statement查询数据时最大的超时时间,默认0 -->
		<property name="queryTimeout" value="0" />
		<!-- 设置底层ResultSet每次从数据库返回的行数,默认0,Oracle默认100 -->
		<property name="fetchSize" value="0" />
		<!-- 设置底层ResultSet从数据库返回的最大行数,默认0 -->
		<property name="maxRows" value="0" />
		<!-- 是否忽略sql警告信息,默认true,false JdbcTemplate将会抛出SQLWarningException -->
		<property name="ignoreWarnings" value="true" />
	</bean>

	<bean id="fwskDao" class="net.easyunion.common.dao.FwskDao">
		<property name="jdbcTemplate" ref="jdbcTemplateFwsk" />
	</bean>


	<!-- 将HttpInvoker配置文件中共公告的部分抽取出来，使用时直接集成就ok了 -->
	<bean id="HttpInvokerBaseService" abstract="true"
		class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter" />

	<!-- 自动检索service.xml后缀的文件，并且加载里面的远程服务调用接口类 -->
	<import resource="**/*_service.xml" />
	<import resource="**/biz_*.xml" />

	<!-- <bean class="net.easyunion.jms.service.JmsService"></bean> -->
</beans>